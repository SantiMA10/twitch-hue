name: kappa

on:
  push:
    paths:
      - "services/kappa/**"
      - ".github/workflows/kappa.yml"
    branches: [master]
  pull_request:
    paths:
      - "services/kappa/**"
      - ".github/workflows/kappa.yml"
    branches: [master]

env:
  PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT }}

defaults:
  run:
    working-directory: services/kappa

jobs:
  install-kappa:
    name: install kappa
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-kappa
      - run: yarn install

  build-kappa:
    name: build kappa
    needs: install-kappa
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-kappa
      - run: yarn install
      - run: yarn run build
      - uses: actions/upload-artifact@v2
        with:
          name: kappa-build
          path: services/kappa/dist

  test-kappa:
    name: test unit kappa
    needs: install-kappa
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-kappa
      - run: yarn install
      - run: yarn test

  kappa-deploy-app:
    name: deploy kappa
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [test-kappa, build-kappa]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud sdk
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "290.0.1"
          service_account_key: ${{ secrets.GOOGLE_CLOUD_SA_KEY }}
          project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}

      # Get kappa build
      - uses: actions/download-artifact@v2
        with:
          name: kappa-build
          path: services/kappa/dist

      # Deploy to Google App Engine
      - name: deploy
        run: gcloud app deploy --quiet

  kappa-deploy-cron:
    name: deploy cron.yaml
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [kappa-deploy-app]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Setup gcloud sdk
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "290.0.1"
          service_account_key: ${{ secrets.GOOGLE_CLOUD_SA_KEY }}
          project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}

      # Deploy to Google App Engine
      - name: deploy
        run: gcloud app deploy cron.yaml --quiet
        env:
          TWITCH_CLIENT_ID: ${{secrets.TWITCH_CLIENT_ID}}
          TWITCH_CLIENT_SECRET: ${{secrets.TWITCH_CLIENT_SECRET}}
          TWITCH_CHANNEL_ID: ${{secrets.TWITCH_CHANNEL_ID}}
          TWITCH_REDIRECT_URI: ${{secrets.TWITCH_REDIRECT_URI}}
          TWITCH_SCOPES: ${{secrets.TWITCH_SCOPES}}
          APP_GOOGLE_CLOUD_SERVICE: ${{secrets.APP_GOOGLE_CLOUD_SERVICE}}
          APP_GOOGLE_CLOUD_QUEUE: ${{secrets.APP_GOOGLE_CLOUD_QUEUE}}
          APP_GOOGLE_CLOUD_QUEUE_LOCATION: ${{secrets.APP_GOOGLE_CLOUD_QUEUE_LOCATION}}
          LIFX_ACCESS_TOKEN: ${{secrets.LIFX_ACCESS_TOKEN}}
          LIFX_LIGHTS: ${{secrets.LIFX_LIGHTS}}
